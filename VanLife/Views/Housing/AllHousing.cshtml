@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Post>
@{
    ViewData["Title"] = "Housing";
}
<h3>@ViewData["Title"]</h3>

<div class="container">
    <div class="row">
        @foreach (var post in Model)
        {
            <div class="col-md-12 mb-4">
                <div class="card d-flex flex-row">
                    <!-- image -->
                    @if (post.Images?.Any() == true)
                    {
                        var firstImage = post.Images.First();
                        <img class="card-img-left"  style="max-width: 150px; object-fit: cover"
                             src="data:@firstImage.ContentType;base64,@firstImage.ImageString" alt="Post cover">
                    }
                    else
                    {
                        <!-- default image -->
                        <img src="/images/no-image.png" class="card-img-left"
                             style="max-width: 150px; object-fit: cover;">
                    }
                    
                    <!-- text -->
                    <div class="card-body d-flex flex-column justify-content-between">
                        <h7 class="card-title">
                            <a href="@Url.Action("Details", "Housing", new { id = post.PostId })"
                               class="text-decoration-none text-dark">
                                @post.Title
                            </a>
                        </h7>
                        <p class="card-text">Price: $@Convert.ToInt32(post.Price)/Month</p>
                        <p class="card-text text-muted">Last Updated: @post.UpdatedAt.ToString("yyyy-MM-dd")</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("ListAll", new { page }))
    </div>
</div>