@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    var currentUser = await UserManager.GetUserAsync(User);
    var hasPassword = await UserManager.HasPasswordAsync(currentUser!);
}

@model VanLife.Models.ViewModel.Account.AccountViewModel

@{
    ViewData["Title"] = "Account Management";
}
<h2>@ViewData["Title"]</h2>

@if (ViewData["UpdateSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewData["UpdateSuccess"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form asp-action="UpdateAccount" method="post">
    <antiforgery />
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Username" class="control-label">User Name</label>
        <input asp-for="Username" class="form-control mb-1"/>
        @if (hasPassword)
        {
            <label asp-for="Email" class="control-label">Email</label>
            <input asp-for="Email" class="form-control"/>
        }
        else
        {
            <label asp-for="Email" class="control-label">Email</label>
            <input asp-for="Email" class="form-control bg-light text-muted" readonly />
            <small class="form-text text-muted">
                This account is authenticated via a third-party provider. The email address cannot be changed.
            </small>
        }

    </div>

    <button type="submit" class="btn btn-primary" style="margin-top: 10px"
            onclick="return confirm('Are you sure to update?');">Update</button>

    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary ms-2" style="margin-top: 10px;">Cancel</a>
</form>

@if (hasPassword)
{
    <hr/>
    <a asp-action="ChangePassword" class="btn btn-warning">Change Password</a>
}

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}